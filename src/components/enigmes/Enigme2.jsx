// Importation de React et des hooks n√©cessaires
import React, { useState, useRef, useContext, useEffect } from "react";
import { JournalContext } from "../../context/JournalContext";

export default function Enigme2({ onComplete }) {
  // --- üéõÔ∏è √âTATS G√âN√âRAUX ---
  const [videoPlayed, setVideoPlayed] = useState(false); // indique si la vid√©o d‚Äôintro est termin√©e
  const [valeur, setValeur] = useState(""); // stocke la valeur saisie
  const [message, setMessage] = useState(""); // message de validation
  const [journal, setJournal] = useState([]); // texte du journal local
  const [audio, setAudio] = useState(null); // Stocke le son narratif

  // ‚úÖ Import du contexte global du Journal
  const { addMessage } = useContext(JournalContext);

  // R√©f√©rence vers la balise vid√©o (pour contr√¥ler lecture/plein √©cran)
  const videoRef = useRef(null);

  // --- üîä Pr√©pare l‚Äôaudio ---
  useEffect(() => {
    const audioElement = document.createElement("audio");
    audioElement.volume = 1;

    // Ajouter la source MP3
    const mp3Source = document.createElement("source");
    mp3Source.src = "/audio/audio_enigme2/audio_enigme_2.mp3"; // Chemin corrig√©
    mp3Source.type = "audio/mpeg";

    // Optionnel : ajouter une source WAV comme secours
    // const wavSource = document.createElement("source");
    // wavSource.src = "/audio/audio_enigme2/audio_enigme_2.wav";
    // wavSource.type = "audio/wav";

    audioElement.appendChild(mp3Source);
    // audioElement.appendChild(wavSource);

    setAudio(audioElement);

    // Nettoyage
    return () => {
      audioElement.pause(); // Arr√™ter l'audio si le composant est d√©mont√©
      audioElement.src = ""; // Lib√©rer la ressource
    };
  }, []);

  // --- LISTE DES PERSONNAGES ---
  const personnages = [
    { nom: "Pierre le Grand", img: "/image/image_enigme2/pierre_le_grand.png", regne: 43 },
    { nom: "Catherine II", img: "/image/image_enigme2/catherine_ii.png", regne: 34 },
    { nom: "L√©nine", img: "/image/image_enigme2/lenine.png", regne: 7 },
    { nom: "Staline", img: "/image/image_enigme2/staline.png", regne: 31 },
    { nom: "Gorbatchev", img: "/image/image_enigme2/gorbatchev.png", regne: 6 },
  ];

  // --- üé¨ Lancement de la vid√©o en plein √©cran ---
  const handleStartVideo = () => {
    const video = videoRef.current;
    if (video) {
      video.play().catch((err) => console.warn("Lecture vid√©o bloqu√©e :", err));

      if (video.requestFullscreen) video.requestFullscreen();
      else if (video.webkitRequestFullscreen) video.webkitRequestFullscreen();
      else if (video.msRequestFullscreen) video.msRequestFullscreen();
    }
  };

  // --- üß© Quand la vid√©o se termine ---
  const handleVideoEnd = () => {
    // Quitte le plein √©cran si actif
    if (document.fullscreenElement) {
      document.exitFullscreen();
    }

    // Lecture de l‚Äôaudio narratif
    if (audio) {
      audio.play().catch((err) => console.warn("Lecture audio bloqu√©e :", err));
    }

    // Met aussi √† jour le journal local (affichage dans la page)
    setJournal((prev) => [
      ...prev,
      'ARC : ',
      'Tu crois avoir r√©par√© le Temps ?',
      'Ce que tu as r√©activ√©, c‚Äôest l‚ÄôHistoire...',
      "Journal : Observe les ann√©es de r√®gne et effectue le calcul :",
      "Additionne les et divise par le nombre de 2 r√©volutions.",
    ]);

    setVideoPlayed(true);
  };

  // --- üßÆ V√©rifie la r√©ponse du joueur ---
  const verifier = () => {
    const num = parseFloat(valeur);

    if (num === 61) {
      addMessage("üì° Donn√©e confirm√©e. Le fichier historique d‚ÄôARC est d√©crypt√©.");
      addMessage("‚úÖ Deuxi√®me partie de la latitude : 61‚Äô ‚Äî bien jou√© !");

      setJournal((prev) => [
        ...prev,
        "üì° Donn√©e confirm√©e. Le fichier historique d‚ÄôARC est d√©crypt√©.",
        "‚úÖ Deuxi√®me partie de la latitude : 61‚Äô",
      ]);

      setTimeout(() => onComplete(), 2500);
    } else if (num === 60.5) {
      setJournal((prev) => [...prev, "üí° Indice : cette coordon√©e ne peut contenir qu'un nombre entier"]);
    } else {
      setMessage("‚ùå Mauvaise r√©ponse. ARC renforce sa vigilance...");
    }
  };

  // --- üñºÔ∏è AFFICHAGE DU COMPOSANT ---
  return (
    <div className="enigme-container">
      <h2>LA COURBE DES ANDES</h2>

      {/* üé• √âtape 1 : Lecture de la vid√©o plein √©cran */}
      {!videoPlayed && (
        <div className="video-intro-container">
          <video
            ref={videoRef}
            src="/video/video_histoire.mp4"
            onEnded={handleVideoEnd}
            className="video-fullscreen"
            onClick={handleStartVideo}
          />
          <p className="info-video">
            üé¨ Cliquez sur la vid√©o pour lancer la s√©quence d'introduction.
          </p>
        </div>
      )}

      {/* üéÆ √âtape 2 : Contenu du jeu apr√®s la vid√©o */}
      {videoPlayed && (
        <>
          {/* Portraits historiques */}
          <div className="portrait-container">
            {personnages.map((perso, i) => (
              <div key={i} className="portrait-card">
                <img src={perso.img} alt={perso.nom} className="portrait-image" />
                <div className="portrait-hover">
                  <p>{perso.regne} ans</p>
                </div>
                <p className="portrait-nom">{perso.nom}</p>
              </div>
            ))}
          </div>

          {/* Journal local (optionnel) */}
          <div className="journal">
            {journal.map((line, index) => (
              <p key={index}>{line}</p>
            ))}
          </div>

          {/* Zone de r√©ponse */}
          <div className="reponse-zone">
            <p>Entre le r√©sultat de ton calcul :</p>
            <input
              type="number"
              value={valeur}
              onChange={(e) => setValeur(e.target.value)}
              placeholder="Entre la valeur..."
            />
            <button onClick={verifier}>Valider</button>
            <p className="message">{message}</p>
          </div>
        </>
      )}
    </div>
  );
}